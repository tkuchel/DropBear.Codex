@using DropBear.Codex.Blazor.Interfaces
@using DropBear.Codex.Notifications.Models
@using DropBear.Codex.Utilities.Interfaces
@using MessagePipe
@inherits DropBear.Codex.Blazor.Components.Bases.DropBearComponentBase
@inject ISnackbarNotificationService SnackbarService
@inject IAsyncSubscriber<string, Notification> NotificationSubscriber
@inject IDebounceService DebounceService

<div id="@_containerId"
     class="snackbar-container"
     role="status"
     aria-live="polite"
     aria-relevant="additions removals"
     aria-atomic="true">

    <CascadingValue Value="this">
        @foreach (var snackbar in _activeSnackbars)
        {
            <DropBearSnackbarNotification
                @key="snackbar.Id"
                @ref="snackbar.ComponentRef"
                Title="@snackbar.Title"
                Message="@snackbar.Message"
                Type="@snackbar.Type"
                Duration="@snackbar.Duration"
                IsDismissible="@snackbar.IsDismissible"
                ActionText="@snackbar.ActionText"
                OnAction="@(() => OnSnackbarActionAsync(snackbar))"
                class="@GetSnackbarClass(snackbar)" />
        }
    </CascadingValue>
</div>
