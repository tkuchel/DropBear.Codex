@using DropBear.Codex.Blazor.Enums
@inherits DropBear.Codex.Blazor.Components.Bases.DropBearComponentBase
@namespace DropBear.Codex.Blazor.Components.Progress

<div class="dropbear-progress"
     role="progressbar"
     aria-valuemin="0"
     aria-valuemax="100"
     aria-valuenow="@CurrentProgress"
     aria-label="@Message">

    <!-- Header Section -->
    <div class="progress-header">
        <div class="progress-info">
            <h3 class="progress-title">@Message</h3>
            @if (ShowPercentage && !IsIndeterminate)
            {
                <span class="progress-percentage">@($"{CurrentProgress:F0}%")</span>
            }
        </div>

        @if (ShowEstimatedTime && !IsIndeterminate && CurrentProgress > 0 && CurrentProgress < 100)
        {
            <div class="progress-meta">
                <div class="estimated-time">
                    <svg class="time-icon" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                    </svg>
                    <span>@GetEstimatedTimeRemaining()</span>
                </div>
            </div>
        }
    </div>

    <!-- Main Progress Bar -->
    <div class="progress-track" data-variant="@Variant.ToString().ToLowerInvariant()">
        <div class="progress-fill @(IsIndeterminate ? "indeterminate" : "")"
             style="@GetProgressFillStyle()">
            @if (!IsIndeterminate && ShowProgressGlow)
            {
                <div class="progress-glow"></div>
            }
        </div>
    </div>

    <!-- Steps Section -->
    @if (HasSteps)
    {
        <div class="steps-section">
            <div class="steps-container" data-layout="@StepsLayout.ToString().ToLowerInvariant()">
                @foreach (var (step, position) in GetVisibleSteps())
                {
                    <DropBearProgressBarStep
                        Config="step"
                        Position="position"
                        Progress="GetStepProgress(step.Id)"
                        Status="GetStepStatus(step.Id)"
                        Variant="Variant"
                        CompactMode="CompactSteps" />
                }
            </div>
        </div>
    }

    <!-- Status Messages -->
    @if (!string.IsNullOrEmpty(StatusMessage))
    {
        <div class="progress-status" data-status="@GetCurrentStatusType()">
            <div class="status-content">
                @if (ShowStatusIcon)
                {
                    <div class="status-icon">@GetStatusIcon()</div>
                }
                <span class="status-text">@StatusMessage</span>
            </div>
        </div>
    }
</div>
