@namespace DropBear.Codex.Blazor.Components.Notifications
@using DropBear.Codex.Blazor.Components.Icons
@inherits DropBear.Codex.Blazor.Components.Bases.DropBearComponentBase

<div id="@SnackbarInstance.Id"
     class="@CssClasses"
     style="--duration: @(SnackbarInstance.Duration)ms"
     @attributes="AdditionalAttributes">

    <div class="dropbear-snackbar-icon">
        <SvgIcon Type="SnackbarInstance.Type"/>
    </div>

    <div class="dropbear-snackbar-content">
        <div class="dropbear-snackbar-title" role="heading" aria-level="2">
            @SnackbarInstance.Title
        </div>
        <div class="dropbear-snackbar-message">
            @((MarkupString)SnackbarInstance.Message)
        </div>

        @if (SnackbarInstance.Actions?.Any() == true)
        {
            <div class="dropbear-snackbar-actions">
                @foreach (var action in SnackbarInstance.Actions)
                {
                    <button type="button"
                            class="dropbear-snackbar-action"
                            @onclick="() => HandleActionClick(action)">
                        @action.Label
                    </button>
                }
            </div>
        }
    </div>

    <button type="button"
            class="dropbear-snackbar-close"
            aria-label="Close notification"
            @onclick="CloseAsync">
        <CloseIcon/>
    </button>

    <div class="progress-bar" role="progressbar" aria-hidden="true"></div>
</div>
